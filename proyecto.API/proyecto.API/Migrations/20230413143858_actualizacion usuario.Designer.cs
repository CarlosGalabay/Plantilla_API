// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using proyecto.API.Entities;

#nullable disable

namespace proyecto.API.Migrations
{
    [DbContext(typeof(NombreDbContext))]
    [Migration("20230413143858_actualizacion usuario")]
    partial class actualizacionusuario
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("proyecto.API.Entities.Productos.Producto", b =>
                {
                    b.Property<int>("Idproducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idproducto");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Idproducto"));

                    b.Property<bool?>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("descripcion");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("nombre");

                    b.Property<decimal>("Precio")
                        .HasColumnType("numeric")
                        .HasColumnName("precio");

                    b.HasKey("Idproducto")
                        .HasName("productos_pkey");

                    b.ToTable("productos");
                });

            modelBuilder.Entity("proyecto.API.Entities.Roles.Role", b =>
                {
                    b.Property<int>("Idrol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idrol");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Idrol"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("descripcion");

                    b.HasKey("Idrol")
                        .HasName("roles_pkey");

                    b.ToTable("roles");
                });

            modelBuilder.Entity("proyecto.API.Entities.Usuarios.Usuario", b =>
                {
                    b.Property<int>("Idusuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idusuario");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Idusuario"));

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("clave");

                    b.Property<string>("Estado")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)")
                        .HasColumnName("estado");

                    b.Property<int>("Idrol")
                        .HasColumnType("integer")
                        .HasColumnName("idrol");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("nombre");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("username");

                    b.HasKey("Idusuario")
                        .HasName("usuarios_pkey");

                    b.HasIndex("Idrol");

                    b.ToTable("usuarios");
                });

            modelBuilder.Entity("proyecto.API.Entities.Usuarios.Usuario", b =>
                {
                    b.HasOne("proyecto.API.Entities.Roles.Role", "IdrolNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("Idrol")
                        .IsRequired()
                        .HasConstraintName("usuarios_idrol_fkey");

                    b.Navigation("IdrolNavigation");
                });

            modelBuilder.Entity("proyecto.API.Entities.Roles.Role", b =>
                {
                    b.Navigation("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
